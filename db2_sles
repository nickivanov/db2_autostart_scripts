#! /bin/sh
#
# /etc/init.d/db2
#
#
# System startup script for the DB2 instances.
# Will start/stop whatever instances are enabled to
# start at boot time in the DB2 global registry.
# See the DB2 Information Center for the db2greg 
# utility for more details.
#
# This will probably only work on SuSE Linux
#
# To install:
# - copy the file to /etc/init.d
# - run chkconfig -add db2
#
#
# Copyright 2013 Nick Ivanov
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

#
### BEGIN INIT INFO
# Provides:       db2
# Required-Start: $local_fs
# Required-Stop: $local_fs
# X-Start-Before: $network
# X-Stop-After: $network
# Default-Start:  3 5
# Default-Stop:   0 1 2 6
# Short-Description: DB2 instance processes
### END INIT INFO

. /etc/rc.status

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status

# First reset status of this service
rc_reset

# DB2 installation path; only one if multiple versions installed
DB2_INSTALL_PATH=/opt/ibm/db2/V10.1

list_instances() {
  $DB2_INSTALL_PATH/bin/db2greg -dump | grep -E '^I,DB2' | \
        cut -d, --output-delimiter=" " -s -f4,5,7
}

case "$1" in
    start)
		echo "Starting DB2 instances "    
		# read DB2 instances from the global registry
		list_instances | while read INST INSTDIR AUTOSTART 
		do 
			if [ $AUTOSTART -eq 1 ]
			then
				echo -n "	$INST"
				su - $INST -c $INSTDIR/adm/db2start>/dev/null& # send to background
				rc_status -v
			fi
		done
		;;

	status)
		echo "Checking for DB2 instances..."
        ## Check status with checkproc(8), if process is running
        ## checkproc will return with exit status 0.

        # Status has a slightly different for the status command:
        # 0 - service running
        # 1 - service dead, but /var/run/  pid  file exists
        # 2 - service dead, but /var/lock/ lock file exists
        # 3 - service not running

		list_instances | while read INST INSTDIR AUTOSTART 
		do 
			echo -n "	$INST"
			checkproc $INSTDIR/adm/db2sysc
			rc_status -v
		done
		;;

	stop)
		echo "Stopping DB2 instances..."

		list_instances | while read INST INSTDIR AUTOSTART 
		do 
			checkproc $INSTDIR/adm/db2sysc
			RC=$?
			if [ $RC -eq 0 ]
			then
				echo -n "	$INST"
				su - $INST -c "$INSTDIR/adm/db2stop force">/dev/null # wait for it to stop
				rc_status -v
			fi		
		done
		;;

    *)
		echo "Usage: $0 {start|stop|status}"
		exit 1
		;;
esac
rc_exit
